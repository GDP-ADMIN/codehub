name: Test Podman Installer

on:
  push:
    branches: [ main, f/add-podman ]
  pull_request:
    branches: [ main, f/add-podman ]

jobs:
  ubuntu-test:
    name: Ubuntu 22.04
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git uidmap slirp4netns fuse-overlayfs dbus-user-session

      - name: Configure rootless
        run: |
          # Clean up any existing Podman storage
          rm -rf ~/.local/share/containers/* ~/.config/containers/* /run/user/$(id -u)/containers 2>/dev/null || true
          sudo rm -rf /var/lib/containers/* 2>/dev/null || true
          
          # Configure user mapping
          echo "$USER:100000:65536" | sudo tee -a /etc/subuid
          echo "$USER:100000:65536" | sudo tee -a /etc/subgid
          
          # Create necessary directories
          mkdir -p ~/.config/containers
          mkdir -p ~/.local/share/containers/storage
          
          # Configure containers.conf for rootless
          echo '[containers]' > ~/.config/containers/containers.conf
          echo 'rootless = true' >> ~/.config/containers/containers.conf
          echo '' >> ~/.config/containers/containers.conf
          echo '[engine]' >> ~/.config/containers/containers.conf
          echo 'cgroup_manager = "cgroupfs"' >> ~/.config/containers/containers.conf
          echo 'events_logger = "file"' >> ~/.config/containers/containers.conf
          echo 'runtime = "crun"' >> ~/.config/containers/containers.conf
          echo '' >> ~/.config/containers/containers.conf
          echo '[network]' >> ~/.config/containers/containers.conf
          echo 'network_backend = "netavark"' >> ~/.config/containers/containers.conf
          
          # Configure storage.conf
          echo '[storage]' > ~/.config/containers/storage.conf
          echo 'driver = "overlay"' >> ~/.config/containers/storage.conf
          echo "runroot = \"/run/user/$(id -u)/containers\"" >> ~/.config/containers/storage.conf
          echo "graphroot = \"/home/$(whoami)/.local/share/containers/storage\"" >> ~/.config/containers/storage.conf
          
          # Set proper permissions
          chmod 600 ~/.config/containers/containers.conf
          chmod 600 ~/.config/containers/storage.conf

      - name: Run Podman Installer
        run: |
          chmod +x devsecops/install_podman.sh
          # Disable interactive prompts
          export PODMAN_SKIP_PROMPTS=1
          # Run with debug output
          bash -x ./devsecops/install_podman.sh

      - name: Validate Podman rootless mode
        run: |
          if podman info | grep -q "rootless: true"; then
            echo "✅ Rootless mode confirmed"
          else
            echo "❌ Rootless mode NOT enabled"
            podman info || true
            exit 1
          fi

  debian-test:
    name: Debian 12
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    container:
      image: debian:12
      options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y sudo curl git uidmap slirp4netns fuse-overlayfs dbus-user-session

      - name: Configure rootless
        run: |
          # Clean up any existing Podman storage
          rm -rf ~/.local/share/containers/* ~/.config/containers/* /run/user/$(id -u)/containers 2>/dev/null || true
          sudo rm -rf /var/lib/containers/* 2>/dev/null || true
          
          # Configure user mapping
          echo "$USER:100000:65536" | sudo tee -a /etc/subuid
          echo "$USER:100000:65536" | sudo tee -a /etc/subgid
          
          # Create necessary directories
          mkdir -p ~/.config/containers
          mkdir -p ~/.local/share/containers/storage
          
          # Configure containers.conf for rootless
          echo '[containers]' > ~/.config/containers/containers.conf
          echo 'rootless = true' >> ~/.config/containers/containers.conf
          echo '' >> ~/.config/containers/containers.conf
          echo '[engine]' >> ~/.config/containers/containers.conf
          echo 'cgroup_manager = "cgroupfs"' >> ~/.config/containers/containers.conf
          echo 'events_logger = "file"' >> ~/.config/containers/containers.conf
          echo 'runtime = "crun"' >> ~/.config/containers/containers.conf
          echo '' >> ~/.config/containers/containers.conf
          echo '[network]' >> ~/.config/containers/containers.conf
          echo 'network_backend = "netavark"' >> ~/.config/containers/containers.conf
          
          # Configure storage.conf
          echo '[storage]' > ~/.config/containers/storage.conf
          echo 'driver = "overlay"' >> ~/.config/containers/storage.conf
          echo "runroot = \"/run/user/$(id -u)/containers\"" >> ~/.config/containers/storage.conf
          echo "graphroot = \"/home/$(whoami)/.local/share/containers/storage\"" >> ~/.config/containers/storage.conf
          
          # Set proper permissions
          chmod 600 ~/.config/containers/containers.conf
          chmod 600 ~/.config/containers/storage.conf

      - name: Run Podman Installer
        run: |
          chmod +x devsecops/install_podman.sh
          # Disable interactive prompts
          export PODMAN_SKIP_PROMPTS=1
          # Run with debug output
          bash -x ./devsecops/install_podman.sh

      - name: Validate Podman rootless mode
        run: |
          if podman info | grep -q "rootless: true"; then
            echo "✅ Rootless mode confirmed"
          else
            echo "❌ Rootless mode NOT enabled"
            podman info || true
            exit 1
          fi

  fedora-test:
    name: Fedora 39
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    container:
      image: fedora:39
      options: --privileged

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          dnf update -y
          dnf install -y sudo curl git shadow-utils slirp4netns fuse-overlayfs dbus

      - name: Configure rootless
        run: |
          # Clean up any existing Podman storage
          rm -rf ~/.local/share/containers/* ~/.config/containers/* /run/user/$(id -u)/containers 2>/dev/null || true
          sudo rm -rf /var/lib/containers/* 2>/dev/null || true
          
          # Configure user mapping
          echo "$USER:100000:65536" | sudo tee -a /etc/subuid
          echo "$USER:100000:65536" | sudo tee -a /etc/subgid
          
          # Create necessary directories
          mkdir -p ~/.config/containers
          mkdir -p ~/.local/share/containers/storage
          
          # Configure containers.conf for rootless
          echo '[containers]' > ~/.config/containers/containers.conf
          echo 'rootless = true' >> ~/.config/containers/containers.conf
          echo '' >> ~/.config/containers/containers.conf
          echo '[engine]' >> ~/.config/containers/containers.conf
          echo 'cgroup_manager = "cgroupfs"' >> ~/.config/containers/containers.conf
          echo 'events_logger = "file"' >> ~/.config/containers/containers.conf
          echo 'runtime = "crun"' >> ~/.config/containers/containers.conf
          echo '' >> ~/.config/containers/containers.conf
          echo '[network]' >> ~/.config/containers/containers.conf
          echo 'network_backend = "netavark"' >> ~/.config/containers/containers.conf
          
          # Configure storage.conf
          echo '[storage]' > ~/.config/containers/storage.conf
          echo 'driver = "overlay"' >> ~/.config/containers/storage.conf
          echo "runroot = \"/run/user/$(id -u)/containers\"" >> ~/.config/containers/storage.conf
          echo "graphroot = \"/home/$(whoami)/.local/share/containers/storage\"" >> ~/.config/containers/storage.conf
          
          # Set proper permissions
          chmod 600 ~/.config/containers/containers.conf
          chmod 600 ~/.config/containers/storage.conf

      - name: Run Podman Installer
        run: |
          chmod +x devsecops/install_podman.sh
          # Disable interactive prompts
          export PODMAN_SKIP_PROMPTS=1
          # Run with debug output
          bash -x ./devsecops/install_podman.sh

      - name: Validate Podman rootless mode
        run: |
          if podman info | grep -q "rootless: true"; then
            echo "✅ Rootless mode confirmed"
          else
            echo "❌ Rootless mode NOT enabled"
            podman info || true
            exit 1
          fi
