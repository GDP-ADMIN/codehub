server_tokens off;

server {
  listen 80 default_server;
  server_name hh.com;

  # Redirect HTTP to HTTPS
  return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name hh.com;

    ssl_certificate /etc/nginx/hh_com.pem;
    ssl_certificate_key /etc/nginx/hh_com.key;

    location /oauth2/ {
        proxy_pass       http://oauth2-proxy:4180;
        proxy_set_header Host                    $host;
        proxy_set_header X-Real-IP               $remote_addr;
        proxy_set_header X-Auth-Request-Redirect $request_uri;
    }

    location = /oauth2/auth {
        proxy_pass       http://oauth2-proxy:4180;
        proxy_set_header Host             $host;
        proxy_set_header X-Real-IP        $remote_addr;
        proxy_set_header X-Forwarded-Uri  $request_uri;
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
    }

    location / {
        auth_request /oauth2/auth;
        error_page 401 =302 /oauth2/start;

        # Backend application
        proxy_pass        http://localhost:3000;  # Secure backend on specified port

        proxy_set_header X-User  $upstream_http_x_auth_request_user;
        proxy_set_header X-Email $upstream_http_x_auth_request_email;
        proxy_set_header X-Access-Token $upstream_http_x_auth_request_access_token;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        resolver_timeout 30s;
        proxy_read_timeout 3600;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-Host   $http_host;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;
        proxy_set_header Origin             $scheme://$http_host;
        proxy_set_header Host               $http_host;
        proxy_set_header  X-Forwarded-Ssl on;
    }
}
